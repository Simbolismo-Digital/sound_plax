<%!-- tutorials on know how to audio --%>
<%!-- https://developer.mozilla.org/en-US/docs/Web/API/MediaStream_Recording_API/Using_the_MediaStream_Recording_API --%>
Hi Process <%= @pid %>

<div class="audio_stream">
    <br>
    <b>Microfone Stream</b>

    <p>fale e se ou√ßa falando</p>

      <script>
        let it_sent = 0;
        let it_play = 0;
        const audioChunks = [];
        const audioMatrix = [];
        function playChunks() {
            <%!-- clean memory for garbage collection && please check sync with it_sent --%>
            <%!-- if (audioMatrix.length > 200) { audioMatrix.splice(0, audioMatrix.length - 20); it_sent = 0; it_play = 0; } --%>
            let audioBlob = new Blob(audioMatrix[it_play]);
            console.log("Playing track", it_play);
            let audioUrl = URL.createObjectURL(audioBlob);               
            let audio = new Audio(audioUrl);
            console.log(audioUrl);
            audio.oncanplaythrough = (e) => { console.log("loaded"); audio.play() };
            audio.onended = (e) => { console.log("end"); URL.revokeObjectURL(audio.src); it_play += 1 };
        }
        navigator.mediaDevices.getUserMedia({ audio: true })
        .then(stream => {
            const mediaRecorder = new MediaRecorder(stream);
            mediaRecorder.addEventListener("dataavailable", event => {
                audioChunks.push(event.data);
            });
            mediaRecorder.start();

            setInterval(() => {               
                mediaRecorder.stop();
                audioMatrix[it_play] = audioChunks.splice(0, audioChunks.length);
                mediaRecorder.start();
                playChunks();
            }, 250);

        })
        .catch(function(error) {
            console.error("Error accessing microphone:", error);
        });


        function sendAudioData(event) {
            console.log("Received ", event);
            const audioChunks = [event.data];
        }
      </script>
</div>